---
- hosts: centos
  become: yes
  vars_files:
    - secrets.yml
  pre_tasks:
    - name: Configure yum base packages for PostgreSQL
      ini_file:
        path: /etc/yum.repos.d/CentOS-Base.repo
        section: base
        option: exclude
        value: postgresql*
    - name: Configure yum updates packages for PostgreSQL
      ini_file:
        path: /etc/yum.repos.d/CentOS-Base.repo
        section: updates
        option: exclude
        value: postgresql*
    - name: Ensure all required packages installed
      package:
        name: 
          - https://download.postgresql.org/pub/repos/yum/11/redhat/rhel-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
          - rsync
        state: present
  roles:
    - role: geerlingguy.postgresql
      vars:
        postgresql_enablerepo: pgdg11
        postgresql_version: 11
        postgresql_daemon: postgresql-11
        postgresql_bin_path: /usr/pgsql-11/bin
        postgresql_data_dir: /var/lib/pgsql/11/data
        postgresql_config_path: /var/lib/pgsql/11/data
        postgresql_packages:
          - postgresql11
          - postgresql11-libs
          - postgresql11-contrib
          - postgresql11-server
        postgresql_hba_entries: []
    - role: pgsql-pass
      vars:
        pgsql_default_password: "{{jira_postgres_login_password}}"
    - role: geerlingguy.java
      vars:
        java_packages:
          - java-1.8.0-openjdk
        java_home: /usr/lib/jvm/jre-1.8.0-openjdk
    - role: jira
      vars:
        jira_java_home: /usr/lib/jvm/jre-1.8.0-openjdk
        jira_port: 8082
        jira_version: 8.1.0
    - role: geerlingguy.jenkins
      vars:
        jenkins_plugins:
          - Folders
          - Timestamper
          - Pipeline
          - Git
          - PAM Authentication
          - OWASP Markup Formatter
          - Build Timeout
          - Credentials Binding
          - Wokspace Cleanup
          - Gradle
          - GitHub Branch Source
          - "Pipeline: GitHub Groovy Libraries"
          - "Pipeline: Stage View"
          - SSH Slaves
          - Matrix Authorization Strategy
          - Email Extension
          - Mailer
          - Locale
    - role: ansible-thoteam.nexus3-oss
      vars:
        nexus_timezone: EEST
        nexus_os_group: nexus
        nexus_os_user: nexus
        nexus_docker_group_port: 5000
        nexus_docker_hosted_port: 5001
        nexus_docker_proxy_port: 5002
        nexus_public_hostname: repo.flexprix.com
        nexus_config_docker: true
        nexus_config_npm: true
        nexus_delete_default_repos: true
        nexus_delete_default_blobstore: false
        nexus_blob_split: true
        nexus_blob_names:
          docker:
            blob: docker
          npm:
            blob: npm
          mvn:
            blob: maven
        nexus_blobstores:
          - name: docker
            type: file
            path: /var/lib/devtools/nexus/blob
          - name: npm
            type: file
            path: /var/lib/devtools/nexus/blob
          - name: maven
            type: file
            path: /var/lib/devtools/nexus/blob
        nexus_repos_maven_hosted:
          - name: mvn-release
            version_policy: release
            write_policy: allow_once
          - name: mvn-snapshot
            version_policy: snapshot
            write_policy: allow
        nexus_repos_maven_proxy:
          - name: mvn-proxy
            remote_url: https://repo1.maven.org/maven2/
            layout_policy: permissive
        nexus_repos_maven_group:
          - name: mvn
            member_groups:
              - mvn-release
              - mvn-snapshot
              - mvn-proxy
        nexus_repos_docker_group:
          - name: docker
            http_port: "{{nexus_docker_group_port}}"
            v1_enabled: true
            member_repos:
              - docker-hosted
              - docker-proxy
        nexus_repos_npm_hosted:
          - name: npm-hosted
            blob_store: "{{nexus_blob_names.npm.blob}}"
        nexus_repos_npm_group:
          - name: npm-all
            blob_store: "{{nexus_blob_names.npm.blob}}"
            member_repos:
              - npm-hosted
              - npm-proxy
  tasks:
    - name: Ensure required firewall ports opened
      firewalld:
        permanent: yes
        zone: public
        port: "{{item}}"
        state: enabled
        immediate: yes
      with_items:
        - 8080/tcp
        - 8081/tcp
        - 8082/tcp
        - 5000-5002/tcp
